eth0：就是网络卡的代号，也有 lo 这个 loopback ；
  HWaddr：就是网络卡的硬件地址，俗称的 MAC 是也；
  inet addr：IPv4 的 IP 地址，后续的 Bcast, Mask 分别代表的是
Broadcast 与 netmask 

指定网卡IP：
ifconfig  ensX  IP/NETMASK
#  ifconfig eth0   192.168.1.22/24
ifdown  ensX   //关闭网卡
ifup    ensX   //开启网卡
网卡别名：
ifconfig   ensX:0   IP/NETMASK   //增加网卡IP，重启失效
ifconfig   ensX:0   down  //stop
永久生效配置方法：
/etc/sysconfig/network-scripts/ifcfg-XXX
DEVVICE=ensxx
其他的保持和样本一致。别名不能使用DHPC动态获得，不能再获取IP地址

route  命令
[root@www ~]# route add [-net|-host] [网域或主机] netmask [mask]   [gw|dev]

	route add -net 192.168.200.0 netmask 255.255.255.0 gw 192.168.200.254
	
[root@www ~]# route del [-net|-host] [网域或主机] netmask [mask]   [gw|dev]

	route del -net 169.254.0.0 netmask 255.255.0.0 dev eth0
	
route  
	观察的参数：
	-n ：不要使用通讯协议或主机名，直接使用 IP 或 port number；
	-ee ：使用更详细的信息来显示
	增加 (add) 与删除 (del) 路由的相关参数：
	-net ：表示后面接的路由为一个网域；
	-host ：表示后面接的为连接到单部主机的路由；
	netmask ：与网域有关，可以设定 netmask 决定网域的大小；
	gw ：gateway 的简写，后续接的是 IP 的数值，与 dev 不同；

*************************************
ip  命令

	link  : 网络接口属性
	addr: 协议地址
	route：路由

	link
		show
			ip -s link show
		set
			ip link set DEV(设备) {up|down}
	
	addr
		ip addr add  地址   dev  设备


[root@www ~]# ip [option] [动作] [指令]
选项与参数：
net.qiang@hotmail.com
option ：设定的参数，主要有：
-s ：显示出该装置的统计数据(statistics)，例如总接受封包数等；
动作：亦即是可以针对哪些网络参数进行动作，包括有：
link ：关于装置 (device) 的相关设定，包括 MTU, MAC 地址等等
addr/address ：关于额外的 IP 协议，例如多 IP 的达成等等；
route ：与路由有关的相关设定


[root@www ~]# ip [-s] link show <== 单纯的查阅该装置相关的信息
[root@www ~]# ip link set [device] [动作与参数]
选项与参数：
show：仅显示出这个装置的相关内容，如果加上 -s 会显示更多统计数据；
set ：可以开始设定项目， device 指的是 eth0, eth1 等等界面代号；
动作与参数：包括有底下的这些动作：
up|down ：启动 (up) 或关闭 (down) 某个接口，其他参数使用默认的以
太网络；
address ：如果这个装置可以更改 MAC 的话，用这个参数修改！
name ：给予这个装置一个特殊的名字；
mtu ：就是最大传输单元



范例二：启动、关闭与设定装置的相关信息
[root@www ~]# ip link set eth0 up
# 启动 eth0 这个装置接口；
[root@www ~]# ip link set eth0 down
# 阿就关闭啊！简单的要命～
[root@www ~]# ip link set eth0 mtu 1000
# 更改 MTU 的值，达到 1000 bytes，单位就是 bytes



范例三：修改网络卡代号、MAC 等参数
[root@www ~]# ip link set eth0 name vbird
SIOCSIFNAME: Device or resource busy
# 因为该装置目前是启动的，所以不能这样做设定。你应该要这样做：
[root@www ~]# ip link set eth0 down <==关闭界面
[root@www ~]# ip link set eth0 name vbird <==重新设定
[root@www ~]# ip link show <==观察一下
2: vbird: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP qlen 1000
link/ether 08:00:27:71:85:bd brd ff:ff:ff:ff:ff:ff
# 怕了吧！连网络卡代号都可以改变！不过，玩玩后记得改回来！
# 因为我们的 ifcfg-eth0 还是使用原本的装置代号！避免有问题，要改回来
net.qiang@hotmail.com
[root@www ~]# ip link set vbird name eth0 <==界面改回来
[root@www ~]# ip link set eth0 address aa:aa:aa:aa:aa:aa
[root@www ~]# ip link show eth0
# 如果你的网络卡支持硬件地址(MAC)可以更改的话，上面这个动作就可以更改
# 你的网络卡地址了！厉害吧！不过，还是那句老话，测试完之后请立刻改回来！


ip address show <==就是查阅 IP 参数！
[root@www ~]# ip address [add|del] [IP 参数] [dev 装置名] [相关参数]
选项与参数：
show ：单纯的显示出接口的 IP 信息啊；
add|del ：进行相关参数的增加 (add) 或删除 (del) 设定，主要有：
IP 参数：主要就是网域的设定，例如 192.168.100.100/24 之类的设定；
dev ：这个 IP 参数所要设定的接口，例如 eth0, eth1 等等；
相关参数：主要有底下这些：
broadcast：设定广播地址，如果设定值是 + 表示『让系统自动计算』
label ：亦即是这个装置的别名，例如 eth0:0 就是了！
scope ：这个界面的领域，通常是这几个大类：
global ：允许来自所有来源的联机；
site ：仅支持 IPv6 ，仅允许本主机的联机；
link ：仅允许本装置自我联机；
host ：仅允许本主机内部的联机；
所以当然是使用 global 啰！预设也是 global ！
# 范例一：显示出所有的接口之 IP 参数：
[root@www ~]# ip address show



关于路由的相关设定： ip route
这个项目当然就是路由的观察与设定！事实上， ip route 的功能几乎与 route
这个指令差不多，但是，他还可以进行额外的参数设计，例如 MTU 的规划等等，相当的强悍！
[root@www ~]# ip route show <==单纯的显示出路由的设定而已
[root@www ~]# ip route [add|del] [IP 或网域] [via gateway] [dev 装置]
选项与参数：
show ：单纯的显示出路由表，也可以使用 list ；
add|del ：增加 (add) 或删除 (del) 路由的意思。
IP 或网域：可使用 192.168.50.0/24 之类的网域或者是单纯的 IP ；
via ：从那个 gateway 出去，不一定需要；
dev ：由那个装置连出去，这就需要了！
mtu ：可以额外的设定 MTU 的数值喔！
# 范例一：显示出目前的路由资料
[root@www ~]# ip route show



范例二：增加路由，主要是本机直接可沟通的网域
[root@www ~]# ip route add 192.168.5.0/24 dev eth0
# 针对本机直接沟通的网域设定好路由，不需要透过外部的路由器
[root@www ~]# ip route show

# 范例三：增加可以通往外部的路由，需透过 router 喔！
[root@www ~]# ip route add 192.168.10.0/24 via 192.168.5.100 dev eth0
[root@www ~]# ip route show
192.168.5.0/24 dev eth0 scope link
....(其他省略)....
net.qiang@hotmail.com
192.168.10.0/24 via 192.168.5.100 dev eth0
# 仔细看喔，因为我有 192.168.5.0/24 的路由存在 (我的网卡直接联系)，
# 所以才可以将 192.168.10.0/24 的路由丢给 192.168.5.100
# 那部主机来帮忙传递！与之前提到的 route 指令是一样的限制！
# 范例四：增加预设路由
[root@www ~]# ip route add default via 192.168.1.254 dev eth0
# 那个 192.168.1.254 就是我的预设路由器 (gateway) 的意思啊！ ^_^
# 真的记得，只要一个预设路由就 OK ！
# 范例五：删除路由
[root@www ~]# ip route del 192.168.10.0/24
[root@www ~]# ip route del 192.168.5.0/24
*****************************************************************

网络配置文件
/etc/sysconfig/network

网络接口配置文件：
/etc/sysconfig/network-scripts/ifcfg-XXX
DEVVICE=:  关联的设备名称，要与文件名的后半部"INTERFACE_NAEME"保持一致
BOOTPROTO={static|none|dhcp|bootp}： 引导协议，要使用静态地址，使用static或none;
IPADDR=:IP地址
NETMASK=:子网掩码
GATEWAY=:设定默认网关
ONBOOT=:开机时是否自动激活此接口
HWADDR=:硬件地址，要与硬件中的地址保持一致，可省
USERCTL={yes|no}:是否允许普通用户控制此接口
PEERDNS={yes|no}:是否在BOOTPROTO为dhcp时接受由DHCP服务器指定的DNS地址


不会立即生效，但重启网络服务或主机都会生效

路由配置
永久生效配置方法：
编辑： vim  /etc/sysconfig/network-scripts/route-（网卡号）
重启网络： /etc/init.d/network   restart
添加格式一：
目标/掩码   via   指定下一跳
例：192.168.1.0/24    via   172.24.24.254


添加格式二：
ADDRESS0=目标
NETMASK0=掩码
GATEWAY0=下一跳

ADDRESS1=目标
NETMASK1=掩码
GATEWAY1=下一跳

例：
ADDRESS0=192.168.1.0
NETMASK0=255.255.255.0
GATEWAY0=172.24.24.254


DNS服务器指定方法只有一种(最多三个)：
vim /etc/resolv.conf
nameserver  DNS_IP_1
nameserver  DNS_IP_2
nameserver  DNS_IP_3

指定本地解析
/etc/hosts
主机IP     主机名     主机别名


配置主机名：
hostname   主机名     （临时）

/etc/sysconfig/network   (编辑文件，永久有效)
NETWORKING=yes           //本机是否启用网络功能的总开关
NETWORKING_IPV6=no		 //本机是否启用IPV6，不彻底，除非卸载模块
HOSTNAME=主机名

文件查找
  locate:非实时的模糊匹配，查找是根据全系统文件数据库进行的
  updatedb:手动生成文件数据库
  find：实时查找、精确，遍历指定目录中的所有文件完成查找，支持众多查找标准。
  find 查找路径  查找标准  查找到以后的处理运作
  查找路径：默认当前目录
  查找标准：默认指定路径下的所有文件
  处理运作：默认为显示
  匹配标准：
    -name "文件名" ：对文件名作精确匹配，区分大小写
    例：find /etc -name "passwd"
  文件名通配：*  ?  []
  -iname "文件名"：文件名匹配时，不区分大小写
  -regex PATTERN:基于正则表达式进行文件名匹配
  -user USERNAME :根据文件的属主来查找
  例：find /tmp -user 用户名
  -group GROUPNAME：根据文件的属组来查找
  -uid UID:根据UID来查找
  -gid GID：根据GID来查找
  -nouser :查找没有属主的文件
  -nogroup :查找没有属组的文件
  -type:根据文件类型来查找
      f:普通文件  
      d:目录
      c:字符文件
      b:块设备
      l:链接设备
      p:管道设备
      s:套接设备
     例：find /etc -type f
  -size:根据文件大小查找，默认字节 [+  |  -](大于或小于)
    -#M：查找多少MB的文件，注意：和匹配相差不大的也会显示，比如，查找10MB，那9MB的也会显示。
    -#k:查找多少KB的文件
    -#G：查找多少GB的文件
    组合条件：
      -a:与
      -o:或
      not:非
      例如：find /etc -nouser -a -type d 
 -------------------------------------------------------------------
  特殊权限：chmod u+s file
  passwd:s,所以普通用户改密码才能写入到passwd中
  SUID:运行某程序时，相应进程的属主是程序文件自身的属主，而不是启动者
  SGID:运行某程序时，相应进程的属主是程序文件自身的属组，而不是启动的基本组
  sticky:在一个公共的目录，每个人都可以创建文件，删除自己的文件，但是不能删除别人的文件
  用法:chmod u+s file  ;  shmod u-s file
       chmod o+t DIR  : 对目录,chmod o-t DIR
   例：chmod 1755 /backup/test
   前面代表：SUID  SGID  sticky
      001:sticky    010:SGID   100:SUID 
文件系统访问控制
setfacl
  -m:设定
      setfacl -m u:用户名 :权限（如rw） 文件名
      setfacl -m g:组名 :权限（如rw） 文件名
  -x:取消设定
      setfacl -x u:用户名 文件名
      setfacl -x g:组名 文件名
FACL：Filesystem Access Contorl List:利用文件扩展保存额外的访问控制权限
getfacl 文件名
-------------------------------------------------------------------
        用户
whiami:查看当前登录的用户
who:显示登录到当前系统的用户有哪些
  -H：详细显示
  -r:显示运行级别
sleep:延时函数
w:显示用户登录
last:登录日志，显示/var/log/wtmp 文件，显示用户登录历史及系统重启历史
  -n# :显示最近#次的相关信息
lastb , /var/log/btmp，显示用户错误的登录尝试
  -n#：显示最近#次的相关信息
  用法：输入lastb,可加选项
lastlog:显示每一个用户最近一次的成功登录信息
用法：lastlog , 也可以lastlog -u 用户名
basename:取最后文件名
mail:查看邮件，按Q键退出
例：cat(echo 写邮件也行) /etc/fatab （前面是内容）| mail -s "How are you(主题)"  用户（要发送的用户）
查看主机名：hostname 
生成随机数：RANDOM(0-32678)
  用法：echo $RANDOM
随机数生成数：熵池
  /dev/random
  /dev/urandom
-----------------------------------------------------------------------
终端类型：
  console:控制台
  pty:物理终端
  tty:虚拟终端
  ttys:串行终端
  pts/数字：伪终端
----------------------------------------------------------------------
  练习：
    写一个脚本，利用RANDOM生成10个随机数，并找出其中的最大值和最小值
    #！/bin/bash
    #
    delcare -i MAX=0
    delcare -i MIN=0
    for I in {1..10};do
      MYRANDOM=$RANDOM
    [$I -eq 1] && MIN=$MYRAND
    if [$I -le 9] ;then
      ehco -n "$MYRAND"
     else 
      echo "$MYRAND"
     fi
    [$MYRAND -gt $MAX] && MAX=$MYRAND
    [$MYRAND - lt $MIN] && MIN=$MYRAND
   done
    echo $MAX , $MIN
-----------------------------------------------------------------------------
case 语句：选择结构
  用法：case 变量 in
    value1)
        语句1 
        ........
        ；；（双分号结束）
    value2)
        语句1 
        ........
        ；；（双分号结束）
    *)
        语句1 
        ........
        ；；（双分号结束）
     esac
  
  例如：
    #！/bin/bash
    #
    case $1 in
    [0-9])
      echo "A number"
    *)
      echo "other"
   esac

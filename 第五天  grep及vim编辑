文本处理工具：grep、sed(数据流编辑器)、awk(报告文本编辑器)
sed基本用法：
  sed：stream EDitor，逐行处理文本，也叫行编辑器。
  vim:全屏编辑器
  sed:有模式空间，默认不编辑原文件，仅对模式空间中的数据做处理
  sed命令不如vim好用，弃之！
---------------------------------------------------------------
接第四天内容 ---->字符测试
==：相等为真，不等为假，一个“=”也行。
  例：[ $A = $B]
!=:不等为真，相等为假。
>：大于为真，小于或等于为假。
<：小于为真，大于或等于为假。
-n string：测试指定字符是否为空，空则真，不空为假。
-s string:测试指定字符是否为不空，不空则真，空为假。
scale=2 :可以保留两位精度。
  例：echo "scale=2;111/222;" | bc（计算器）
组合测试条件：
-a:与关系
-o:或关系
!:非关系
例：if [$# -gt 1 -a $# -le 3]  =    if [$# -gt 1]&&[$# -le -3]
---------------------------------------------------------
for语句：
  for 变量 in 列表；do
    循坏体
  done
例： for I in 1 2 3 4 5;do
        加法运算
     done
如何生成列表：
{1..100}，将自动展开1-100
#：seq 10 (自动展开1-10)
seq [起始数 [步进数] 结束数] ------->for语句中要用命令替换
变量是字符串
声明：
declare -i sum=0
declare -x :将一个变量声明为环境变量
例：1加到100
  {for I in {1..100}；do
    let sum(事先声明好)=$[$Ssum+$I]
    done          }
----------------------------------------------------------------------
    vim编辑器
vi：Visual Inteface
vim:VI improved(vi的增强版)
vim+file:让光标处在文件最后一行
vim +# file:打开文件，并定位于第#行
vim+/PATTERN file:打开文件，定位于第一次被PATTERN匹配到的行的行首
vim 模式：
  1.编辑模式(命令模式)
  2.输入模式
  3.末行模式
模式转换：
编辑---->输入
  i:在当前光标所在字符的前面，转为输入模式
  a:在当前光标所在字符的后面，转为输入模式
  o:在当前光标所在行的下行，新建一行，并转入输入模式
  I：在当前光标所在行的行首，转换为输入模式
  A：在当前光标所在行的行尾，转换为输入模式
  O：在当前光标所在行的上方，新建一行，并转为输入模式
输入模式------>编辑
ESC键
末行模式(命令):
  删除第10行：10d
  删除10-20行：10，20d
  显示行号：set nu
  取消行号：set nonu
  查看文件：！/路径，回车，再回车就返回
末行模式---->编辑
  ESC键
移动光标：
  1.逐字符移动
      h:向左
      l:向右
      j:向下
      k:向上
      #h：移动#个字符
  2.以单词为单位移动
    w；移至下一个单词词首
    e:移至下一个单词词尾
    b:移至上一个单词词尾
    #w:移动#个单词
  3.行内跳转
    O：绝对行首
    ^:行首的第一个非空白字符
    $：绝对行尾
  4.行间跳转
    #G:跳转到第#行上
    G：最后一行
  末行模式下，直接给出行号即可
翻屏：
  在编辑模式下：
    ctrl+f:向下翻一屏
    ctrl+b:向上翻一屏
    ctrl+d:向下翻办屏
    ctrl+u:向上翻半屏
删除单个字符（编辑模式）
  x:删除光标所在的单个字符
  #x:删除光标所在及向后的共#个字符
删除命令：d
  d+$:删除光标后的字符
  d+o：删除光标前的字符
  d+w：单个单词删
末行模式：
  开始地址，结束地址d
替换（编辑模式）：r
  R:按下的键替换之前的内容
撤销编辑操作
  u:撤销上一次操作
  #u：直接撤销最近#次编辑操作
  撤销最近一次的撤销操作：ctrl+r
重复前一次编辑操作：.
可视化模式
  v:按字符选取
  V：按矩形选取
查找
  /名称，往下找
  ？名称，往上找
  "n"：下一个
替换
在末行模式下使用s命令
  起始地址，结束地址s/原/后/gi
  g:全局替换
  i:忽略大小写
  %:全文
  例：%s/ftp/FTP/gi
 地址s@原@后@要求
使用vim编辑多文件
  vim file1 fiel 2 ...
  （末行模式）:next   切换至下一个文件
  ：prev 切换至前一个文件
  ：last 切换至最后一个文件
  ：first 切换至第一个文件
分屏显示一个文件
ctrl+w,s：水平拆分窗口
ctrl+w,v：垂直拆分窗口
在窗口间切换光标
ctrl+w,按上下键
：q  :退出一个窗口
：qa  :退出所有窗口
分窗口多个文件
vim -o（水平） file1 file2
vim -O（水平） file1 file2
将另外一个文件的内容填充在当前文件中
  ：r/路径
跟shell 交互
 ：！command   再回车返回
查找到的文本高亮显示或取消
：set hlsearch
:set nohlsearch
语法高亮
  ：syntax on
  :syntax off
vim 配置文件
/etc/vimrc    ：全局
~/.vimrc   :个人
脚本：添加10个用户，密码同名；但要求只有用户不存在的情况下才能添加。
  { #！/bin/bash
  #
  for R in {1..10};do
    if id user$R &>/dev/null;then
    echo "user$R exists."
    else
      useradd user$R
    echo user$R | passwd --stdin user$R &>/dev/null
    echo"Add success!"
    fi
    done   }
    给权限运行。
    
    
